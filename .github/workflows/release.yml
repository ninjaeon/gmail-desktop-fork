name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Gmail Desktop ${{ github.ref_name }}
          draft: false
          prerelease: false

  build:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            dist-target: 'macos'
          - os: ubuntu-latest
            dist-target: 'linux'
          - os: windows-latest
            dist-target: 'windows'
      fail-fast: false
    steps:
      - if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install --no-install-recommends -y libarchive-tools
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run build
      - name: Build and publish
        run: npm run dist:${{ matrix.dist-target }} -- --publish always
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          # Disable code signing for Windows builds
          CSC_IDENTITY_AUTO_DISCOVERY: false
